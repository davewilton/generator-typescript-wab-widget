/// <amd-dependency path="jimu/BaseWidget" name="BaseWidget" />
declare var BaseWidget: any; // there is no ts definition of BaseWidget yet

// dojo
import dojoDeclare = require("dojo/_base/declare");
import domConstruct = require("dojo/dom-construct");

// esri
import Map = require("esri/map");

// local
import Module = require("./<%= subWidgetName %>/<%= subWidgetName %>");
import declareDecorator = require("./<%= subWidgetName %>/resources/declareDecorator");

@declareDecorator(BaseWidget)
class Clazz {

     // description: <%= description %>
    public baseClass: "<%= baseClass %>";
    public widget: Module;
    public map: Map;
    public domNode: HTMLElement;
    public config: any;

    startup(args: any): void {
        const self: any = this;
        self.inherited(arguments);

        // create an instance of our widget and place on the widget dom
        const widgetDiv: HTMLElement = domConstruct.create("div", null, this.domNode);
        const widget: Module = new Module({
            map: this.map,
            config: this.config
        }, widgetDiv);

        widget.startup();
        this.widget = widget;
    }

    // other BaseWidget widget methods: onOpen, onClose, onMinimize,
    // onMaximize, onSignIn, onSignOut, onPositionChange, resize
}

export = Clazz;
