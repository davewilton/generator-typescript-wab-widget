/// <amd-dependency path="jimu/BaseWidget" name="BaseWidget" />
declare let BaseWidget: any; // there is no ts definition of BaseWidget yet

// dojo
import dojoDeclare = require("dojo/_base/declare");
import domConstruct = require("dojo/dom-construct");

// esri
import Map = require("esri/map");

// local
import <%= subWidgetName %> = require("./<%= subWidgetName %>/<%= subWidgetName %>");
import declareDecorator = require("./<%= subWidgetName %>/resources/declareDecorator");

@declareDecorator(BaseWidget)
class Widget {

     // description: <%= description %>
    public baseClass: "<%= baseClass %>";
    public widget: <%= subWidgetName %>;
    public map: Map;
    public domNode: HTMLElement;
    public config: any;

    public startup(args: any): void {
        const self: any = this;
        self.inherited(arguments);

        // create an instance of our widget and place on the widget dom
        const widgetDiv: HTMLElement = domConstruct.create("div", null, this.domNode);
        this.widget = new <%= subWidgetName %>({
            map: this.map,
            config: this.config
        }, widgetDiv);

        this.widget.startup();
    }

    // other BaseWidget widget methods: onOpen, onClose, onMinimize,
    // onMaximize, onSignIn, onSignOut, onPositionChange, resize
}

export = Widget;
